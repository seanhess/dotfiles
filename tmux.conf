# TMUX MAN PAGE
# https://man.openbsd.org/tmux.1
#
set -g default-terminal "tmux-256color"
setw -g xterm-keys on

# set -g pane-active-border-style fg=colour208,bg=default
set -g pane-active-border-style fg=magenta,bg=default
set -g pane-border-style fg="#666666",bg=default
# set -g status-bg "#666666"
set -g status-bg "#00AAFF"
set -g pane-border-lines heavy
set -g pane-border-indicators off


setw -g mode-keys vi
set  -s escape-time 0
set  -g mouse on 
set  -g focus-events on
setw -g focus-events on

# display of active window
# set -g window-status-current-format ' #{b:pane_current_path}×€#{window_name} '
set -g window-status-current-format ' #{b:pane_current_path}:#{window_name} '

# display of all other windows
# set -g window-status-format '#{window_index} #{b:pane_current_path}'
set -g window-status-format '#{b:pane_current_path}:#{window_name}'
set -g window-status-current-style fg="#00AAFF",bg="#282C34",bold
set -g window-status-style fg="#282C34"

# bind w choose-window

# UNBINDS
# unbind BSpace
# unbind \\

# Rebind prefix to ctrl+a
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Move to beginning and end of line (since we remapped c-a)
bind a send-prefix
bind e send C-e


# COPY MODE: https://dev.to/iggredible/the-easy-way-to-copy-text-in-tmux-319g
# ctrl+a [ to enter
# v to begin selection
# / to search
# y to yank
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"


# Reload source file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# command-prompt no need to hold shift for :
bind \; command-prompt -I ""

# normal command to choose windows, but better names
bind w choose-window -F "#{b:pane_current_path} #{window_name}"

# Split using \ and -
# bind \\ split-window -h -c "#{pane_current_path}" \; select-layout -E
bind /  split-window -h -c "#{pane_current_path}" \; select-layout main-vertical \; resize-pane -t 1 -x80 # \; select-layout -E
bind \\  split-window -h -c "#{pane_current_path}" \;
bind -  split-window -v -c "#{pane_current_path}" # \; select-layout -E


# Kill pane without confirmation (it's already bound to x)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind x          kill-pane \; select-layout -E
# bind BSpace     kill-pane \; select-layout -E
bind BSpace     if-shell "$is_vim" 'send-keys C-q' 'kill-pane'
bind enter resize-pane -Z       # (mazimize) pane zome

bind q  if-shell "$is_vim" 'send-keys C-q' "split-window -v -c \"#{pane_current_path}\" \; select-pane -U \; kill-pane"

bind m break-pane -d           # (minimize) break pane off to window 
bind n join-pane -h -s $.0 \; select-layout main-vertical \; resize-pane -t 1 -x80   # (NEXT maximize) bring next window in as a vertical pane


# if you start with tiled you can get almost anywhere by splitting panes and moving
bind v select-layout even-horizontal
bind t select-layout tiled 
# bind e select-layout -E
# bind 4 select-layout main-vertical \; resize-pane -t 1 -x80
# bind 4 select-layout "159x59,0,0,5,80x59,160,0,15"
bind 2 resize-pane -x120        # 1/3 screen
bind 3 resize-pane -x80         # 1/2 screen
bind 1 display-panes


bind [ copy-mode
# bind ] next-window


# Rebind hjkl to move

# Select panes: ctrl+hjkl
# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R


bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'C-S-h' if-shell "$is_vim" 'send-keys C-S-h' 'resize-pane -L 5'
bind -n 'C-S-j' if-shell "$is_vim" 'send-keys C-S-j' 'resize-pane -D 5'
bind -n 'C-S-k' if-shell "$is_vim" 'send-keys C-S-k' 'resize-pane -U 5'
bind -n 'C-S-l' if-shell "$is_vim" 'send-keys C-S-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi C-S-h resize-pane -L 5
bind-key -T copy-mode-vi C-S-j resize-pane -D 5
bind-key -T copy-mode-vi C-S-k resize-pane -U 5
bind-key -T copy-mode-vi C-S-l resize-pane -R 5




# Resize panes: ctrl+shift+HJKL

# Swap panes: prefix+hjkl
bind h swap-pane -s '{left-of}'
bind j swap-pane -s '{down-of}'
bind k swap-pane -s '{up-of}'
bind l swap-pane -s '{right-of}'

# bind-key -n C-M-h swap-pane -s '{left-of}'
# bind-key -n C-M-j swap-pane -s '{down-of}'
# bind-key -n C-M-k swap-pane -s '{up-of}'
# bind-key -n C-M-l swap-pane -s '{right-of}'

# -Move pane: prefix+HJKL
bind H  move-pane -bh -t '{left}'
bind J  move-pane    -t '{bottom}'
bind I  move-pane -b -t '{top}'
bind L  move-pane -h  -t '{right}'





# Attach to sessions
# --------------------
# tmux
# tmux a
# tmux a -t 0
# tmux a -t named-session


# Pane name shortcuts!
# ---------------------
#
# swap-pane -s {right-of}
#
# {last} !       The last (previously active) pane
# {next} +       The next pane by number
# {previous} -   The previous pane by number
# {top}          The top pane
# {bottom}       The bottom pane
# {left}         The leftmost pane
# {right}        The rightmost pane
# {top-left}     The top-left pane
# {top-right}    The top-right pane
# {bottom-left}  The bottom-left pane
# {bottom-right} The bottom-right pane
# {up-of}        The pane above the active pane
# {down-of}      The pane below the active pane
# {left-of}      The pane to the left of the active pane
# {right-of}     The pane to the right of the active pane

# Move Panes Anywhere
# --------------------
# :move-pane -t0 -v    Move current below 0
# :move-pane -t0 -h    Move current right of 0
# :move-pane -t-       Move current below previous
# :move-pane -t+       Move current below next
#
#
# :rotate-window    c-o       Rotates all around
# :move

## NOTES
# q - shows you the panes
# ? - all key bindings

# rotate-window c-o
# swap-pane -U  }
# swap-pane -D  {
# swap-pane -L
# swap-pane -R
